#!/usr/bin/env python3

import sys
import subprocess
import tempfile
import os.path
import shutil

def runcmd(argv):
	proc = subprocess.Popen(argv, bufsize=1048576, stdin=subprocess.PIPE, stdout=subprocess.PIPE)
	o, e = proc.communicate()
	if proc.returncode != 0:
		print(e)
		sys.exit(proc.returncode)

if __name__ == '__main__':
	input_pattern = sys.argv[1]
	first_number = int(sys.argv[2])
	output_file = sys.argv[3]
	
	max_geometry = "1200x720"

	temp_dir = tempfile.mkdtemp()

	try:
		# TODO maybe make this handle it nicely if the files have a gap... tolerate one or two? Canon does that sometimes.
		number = first_number
		file_found = True
		file_names = []
		while file_found:
			file_name = input_pattern % number
			file_found = os.path.isfile(file_name)
			if file_found:
				file_names.append(file_name)
			number += 1

		small_pat = os.path.join(temp_dir, 'frame%05d.jpg')

		for number, file_name in enumerate(file_names):
			runcmd(['convert', '-geometry', max_geometry, '-quality', '95', file_name, small_pat % number])

		runcmd(['ffmpeg', '-f', 'image2', '-start_number', '0', '-i', small_pat, '-c:v', 'libx264', '-preset', 'slow', '-tune', 'stillimage', output_file])
	finally:
		shutil.rmtree(temp_dir)

